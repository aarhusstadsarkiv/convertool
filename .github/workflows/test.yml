name: Test

on:
  push:
    paths:
      - src/**
      - config/**
      - tests/**
      - Dockerfile
      - pyproject.toml
      - uv.lock
      - .github/workflows/test.yml
  workflow_dispatch:
  workflow_call:

jobs:
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v5
      - uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - run: uv sync --all-extras --dev
      - name: ruff check
        run: uv run ruff check src
      - name: ruff format
        run: uv run ruff format --check src

  version:
    name: Test Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          version_project="$(grep --color=never '^version *= *".*"' pyproject.toml)"
          version_project="${version_project%\"}"
          version_project="${version_project#*\"}"
          project_name="$(grep --color=never '^name *= *".*"' pyproject.toml)"
          project_name="${project_name%\"}"
          project_name="${project_name#*\"}"
          version_package="$(grep --color=never '__version__ *= *".*"' "src/$project_name/__version__.py")"
          version_package="${version_package%\"}"
          version_package="${version_package#*\"}"
          test "$version_project" = "$version_package"

  version-acacore:
    name: Test acacore Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Fetch Acacore Version
        run: |
          acacore_remote="$(python -c 'import urllib.request,json;print(json.loads(urllib.request.urlopen("https://api.github.com/repos/aarhusstadsarkiv/acacore/tags").read())[0]["name"])')"
          acacore_remote="${acacore_remote#v}"
          acacore_package="$(grep '^acacore =' pyproject.toml | grep -oE 'tag[ ]*=[ ]*"[^"]+"')"
          acacore_package="${acacore_package#*\"}"
          acacore_package="${acacore_package#v}"
          acacore_package="${acacore_package%\"}"
          echo "acacore available $acacore_remote"
          echo "acacore used $acacore_package"
          test "$acacore_remote" = "$acacore_package"

  pytest:
    name: pytest
    runs-on: ubuntu-latest
    needs:
      - linting
      - version
      - version-acacore
    env:
      PROCESS_TIMEOUT_MULTIPLIER: 5
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Build Test Image
        uses: docker/build-push-action@v6
        with:
          file: ./Dockerfile
          target: test
          tags: convertool:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: false
      - name: Create container
        run: docker run -td -v $(pwd):/root/convertool -e "PROCESS_TIMEOUT_MULTIPLIER=$PROCESS_TIMEOUT_MULTIPLIER" --name convertool convertool:latest
      - name: pytest
        run: docker exec convertool uv run coverage run -m pytest
      - name: coverage
        run: docker exec convertool uv run coverage report -m --fail-under=80 --skip-empty --skip-covered
